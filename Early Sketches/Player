package com.tutorial.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.swing.ImageIcon;





public class Player extends GameObject{
	
	
	Handler handler;
	private BufferedImage player_img = null;
	
	

	public Player(int x, int y, ID id, Handler handler, Game game) {
		super(x, y, id);
		
		init();		
							
		this.handler = handler;
		
		velX = 0;
		velY = 0;
				
	}

	@Override
	public void tick() {
		
		x += velX;
		y += velY;		
				
		
		if(  y <= 0   ){y = 0;}
		if( y >= Game.HEIGHT -93){ y = Game.HEIGHT -93; }// player = 32x64
		if(  x <= 0 ){ x = 0;}
		if( x >= Game.WIDTH -38){ x = Game.WIDTH -38;}// player = 32x64
		//screen problems lead to different width-height values
		
		collision();
		
	}

	@Override
	public void render(Graphics g) {
		
		if(id == ID.Player){	
			
			g.drawImage(player_img, x, y,  null);//son
				
			//g.setColor(Color.blue);
			//g.fillRect(x, y, 32, 64); // player object
		}
		else if(id == ID.Player2){
			
			g.setColor(Color.green);
			g.fillRect(x, y, 32, 64);			
		}				
		
	}
	
	private void collision(){
		
		for(int i=0; i<handler.object.size(); i++){
			
			GameObject tempObject = handler.object.get(i);
			
			if(tempObject.getId() == ID.BasicEnemy ){	// it has to be basicenemybullet!!!	//tempObject is now basicenemy		
				
				if(getBounds().intersects(tempObject.getBounds())){
					//collision code
					
					HUD.HEALTH -= 5;
					
					handler.removeObject(tempObject);
					
										
				}
			}
			
			if(tempObject.getId() == ID.Enemy ){		// it has to be enemybullet!!!		
				
				if(getBounds().intersects(tempObject.getBounds())){
					//collision code
					
					HUD.HEALTH -= 5;
					
					handler.removeObject(tempObject);
					
				}
			}
			
			if(tempObject.getId() == ID.EnemyBullet){   //bullet çarptığında bullet'ı siler  //hasar enemybullet classında veriliyor
				
				if(getBounds().intersects(tempObject.getBounds())){ 
					
					handler.removeObject(tempObject);
					
					
					
				}
			}
			
		}
		
	}
	
	@Override
	public Rectangle getBounds() {
		
		return new Rectangle(x, y, 64, 90);
	}
	
	
	public void init(){
		
		BufferedImageLoader loader = new BufferedImageLoader();
		
		try{			
			player_img = loader.loadImage("/player64x90.png");			
			
		}catch(IOException e){
			e.printStackTrace();
		}	
		
		
		
		
	}
	
	
			
	
}
